{"ast":null,"code":"var _jsxFileName = \"/Users/mvmarco/code/mvmarco/react-calendar/src/Components/Calendar/CalendarIndex.js\",\n    _s = $RefreshSig$();\n\nimport styled from \"styled-components\";\nimport CalendarComponent from \"./CalendarComponent\";\nimport DaysOfTheWeekComponent from \"./DaysOfTheWeekComponent\";\nimport { MONTH, WEEK } from \"../../Utils/constantsCalendar\";\nimport { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CalendarIndex() {\n  _s();\n\n  // FROM 0 TO 11, CURRENT MONTH\n  const [activeMonth, setActiveMonth] = useState(new Date().getMonth());\n  const [year, setYear] = useState(new Date().getFullYear());\n  let block = useRef(null);\n  return /*#__PURE__*/_jsxDEV(CalendarContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [MONTH[activeMonth], \" \", /*#__PURE__*/_jsxDEV(Year, {\n          style: {\n            color: \"white\"\n          },\n          children: year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: WEEK.map((dayOfTheWeek, key) => /*#__PURE__*/_jsxDEV(DaysOfTheWeekComponent, {\n          dayOfTheWeek: dayOfTheWeek\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n      ref: block,\n      children: /*#__PURE__*/_jsxDEV(CalendarComponent, {\n        setActiveMonth: setActiveMonth,\n        activeMonth: activeMonth,\n        year: year,\n        setYear: setYear,\n        refToWrapper: block\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n} // STYLES\n// NAV SECTION\n\n_s(CalendarIndex, \"GkKb31wO98yG1fWa47RX3V62EU0=\");\n\n_c = CalendarIndex;\nconst CalendarContainer = styled.div`\n  color: rgb(53 128 131);\n  background-color: rgba(20, 97, 101, 255);\n  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.2);\n  border-radius: 10px;\n  overflow: hidden;\n  height: Calc(50% - 5px);\n`;\n_c2 = CalendarContainer;\nconst Nav = styled.div`\n  color: rgba(4, 173, 147, 255);\n  width: 100%;\n  background-color: rgba(20, 97, 101, 255);\n  height: 20%;\n`;\n_c3 = Nav;\nconst Year = styled.span`\n  font-weight: 100;\n  justify-content: center;\n`;\n_c4 = Year;\nconst Row = styled.div`\n  display: flex;\n  /* border-bottom: 1px solid #c7c7c7; */\n  height: 28px;\n`; // CALENDAR ITSELF\n\n_c5 = Row;\nconst Wrapper = styled.div`\n  width: 100%;\n  overflow: scroll;\n  height: calc(80% - 20px);\n  scroll-snap-type: proximity;\n  scroll-snap-type: y proximity;\n  margin-top: 20px;\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`;\n_c6 = Wrapper;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"CalendarIndex\");\n$RefreshReg$(_c2, \"CalendarContainer\");\n$RefreshReg$(_c3, \"Nav\");\n$RefreshReg$(_c4, \"Year\");\n$RefreshReg$(_c5, \"Row\");\n$RefreshReg$(_c6, \"Wrapper\");","map":{"version":3,"sources":["/Users/mvmarco/code/mvmarco/react-calendar/src/Components/Calendar/CalendarIndex.js"],"names":["styled","CalendarComponent","DaysOfTheWeekComponent","MONTH","WEEK","useState","useRef","CalendarIndex","activeMonth","setActiveMonth","Date","getMonth","year","setYear","getFullYear","block","color","map","dayOfTheWeek","key","CalendarContainer","div","Nav","Year","span","Row","Wrapper"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;AACA,SAASC,KAAT,EAAgBC,IAAhB,QAA4B,+BAA5B;AACA,SAASC,QAAT,EAAkBC,MAAlB,QAAgC,OAAhC;;AAEA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AACtC;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,IAAIK,IAAJ,GAAWC,QAAX,EAAD,CAA9C;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,IAAIK,IAAJ,GAAWI,WAAX,EAAD,CAAhC;AACA,MAAIC,KAAK,GAAGT,MAAM,CAAC,IAAD,CAAlB;AACA,sBACE,QAAC,iBAAD;AAAA,4BACE,QAAC,GAAD;AAAA,8BACE;AAAA,mBACGH,KAAK,CAACK,WAAD,CADR,oBACuB,QAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEQ,YAAAA,KAAK,EAAE;AAAT,WAAb;AAAA,oBAAkCJ;AAAlC;AAAA;AAAA;AAAA;AAAA,gBADvB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,GAAD;AAAA,kBACGR,IAAI,CAACa,GAAL,CAAS,CAACC,YAAD,EAAeC,GAAf,kBACR,QAAC,sBAAD;AAAwB,UAAA,YAAY,EAAED;AAAtC,WAAyDC,GAAzD;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAYE,QAAC,OAAD;AAAS,MAAA,GAAG,EAAEJ,KAAd;AAAA,6BACE,QAAC,iBAAD;AACE,QAAA,cAAc,EAAEN,cADlB;AAEE,QAAA,WAAW,EAAED,WAFf;AAGE,QAAA,IAAI,EAAEI,IAHR;AAIE,QAAA,OAAO,EAAEC,OAJX;AAKE,QAAA,YAAY,EAAIE;AALlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,C,CAED;AAEA;;GAjCwBR,a;;KAAAA,a;AAkCxB,MAAMa,iBAAiB,GAAGpB,MAAM,CAACqB,GAAI;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;MAAMD,iB;AAQN,MAAME,GAAG,GAAGtB,MAAM,CAACqB,GAAI;AACvB;AACA;AACA;AACA;AACA,CALA;MAAMC,G;AAON,MAAMC,IAAI,GAAGvB,MAAM,CAACwB,IAAK;AACzB;AACA;AACA,CAHA;MAAMD,I;AAIN,MAAME,GAAG,GAAGzB,MAAM,CAACqB,GAAI;AACvB;AACA;AACA;AACA,CAJA,C,CAMA;;MANMI,G;AAON,MAAMC,OAAO,GAAG1B,MAAM,CAACqB,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;MAAMK,O","sourcesContent":["import styled from \"styled-components\";\nimport CalendarComponent from \"./CalendarComponent\";\nimport DaysOfTheWeekComponent from \"./DaysOfTheWeekComponent\";\nimport { MONTH, WEEK } from \"../../Utils/constantsCalendar\";\nimport { useState,useRef } from \"react\";\n\nexport default function CalendarIndex() {\n  // FROM 0 TO 11, CURRENT MONTH\n  const [activeMonth, setActiveMonth] = useState(new Date().getMonth());\n  const [year, setYear] = useState(new Date().getFullYear());\n  let block = useRef(null)\n  return (\n    <CalendarContainer>\n      <Nav>\n        <h1>\n          {MONTH[activeMonth]} <Year style={{ color: \"white\" }}>{year}</Year>\n        </h1>\n        <Row>\n          {WEEK.map((dayOfTheWeek, key) => (\n            <DaysOfTheWeekComponent dayOfTheWeek={dayOfTheWeek} key={key} />\n          ))}\n        </Row>\n      </Nav>\n\n      <Wrapper ref={block}>\n        <CalendarComponent\n          setActiveMonth={setActiveMonth}\n          activeMonth={activeMonth}\n          year={year}\n          setYear={setYear}\n          refToWrapper = {block}\n        />\n      </Wrapper>\n    </CalendarContainer>\n  );\n}\n\n// STYLES\n\n// NAV SECTION\nconst CalendarContainer = styled.div`\n  color: rgb(53 128 131);\n  background-color: rgba(20, 97, 101, 255);\n  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.2);\n  border-radius: 10px;\n  overflow: hidden;\n  height: Calc(50% - 5px);\n`;\nconst Nav = styled.div`\n  color: rgba(4, 173, 147, 255);\n  width: 100%;\n  background-color: rgba(20, 97, 101, 255);\n  height: 20%;\n`;\n\nconst Year = styled.span`\n  font-weight: 100;\n  justify-content: center;\n`;\nconst Row = styled.div`\n  display: flex;\n  /* border-bottom: 1px solid #c7c7c7; */\n  height: 28px;\n`;\n\n// CALENDAR ITSELF\nconst Wrapper = styled.div`\n  width: 100%;\n  overflow: scroll;\n  height: calc(80% - 20px);\n  scroll-snap-type: proximity;\n  scroll-snap-type: y proximity;\n  margin-top: 20px;\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}