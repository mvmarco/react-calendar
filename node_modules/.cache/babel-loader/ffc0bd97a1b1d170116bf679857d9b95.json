{"ast":null,"code":"var _jsxFileName = \"/Users/mvmarco/code/mvmarco/react-calendar/src/Context/Context.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from 'react';\nimport { DATE } from '../Utils/constantsCalendar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Context = /*#__PURE__*/createContext();\nexport const ContextProvider = ({\n  children\n}) => {\n  _s();\n\n  const [minutes, setMinutes] = useState(DATE.getMinutes());\n  const [hours, setHours] = useState(DATE.getHours());\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      minutes,\n      setMinutes,\n      hours,\n      setHours\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"D6+JNvkon6F147aZugKG71uV0ms=\");\n\n_c = ContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"sources":["/Users/mvmarco/code/mvmarco/react-calendar/src/Context/Context.js"],"names":["createContext","useState","DATE","Context","ContextProvider","children","minutes","setMinutes","getMinutes","hours","setHours","getHours"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,IAAT,QAAqB,4BAArB;;AAEA,OAAO,MAAMC,OAAO,gBAAGH,aAAa,EAA7B;AAEP,OAAO,MAAMI,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC/C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAACC,IAAI,CAACM,UAAL,EAAD,CAAtC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAACC,IAAI,CAACS,QAAL,EAAD,CAAlC;AAEA,sBACE,QAAC,OAAD,CAAS,QAAT;AACE,IAAA,KAAK,EAAE;AACLL,MAAAA,OADK;AAELC,MAAAA,UAFK;AAGLE,MAAAA,KAHK;AAILC,MAAAA;AAJK,KADT;AAAA,cAQGL;AARH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAhBM;;GAAMD,e;;KAAAA,e","sourcesContent":["import { createContext, useState } from 'react';\nimport { DATE } from '../Utils/constantsCalendar';\n\nexport const Context = createContext();\n\nexport const ContextProvider = ({ children }) => {\n  const [minutes, setMinutes] = useState(DATE.getMinutes());\n  const [hours, setHours] = useState(DATE.getHours());\n\n  return (\n    <Context.Provider\n      value={{\n        minutes,\n        setMinutes,\n        hours,\n        setHours\n      }}\n    >\n      {children}\n    </Context.Provider>\n  );\n};\n\n\n"]},"metadata":{},"sourceType":"module"}