[{"/Users/mvmarco/code/mvmarco/react-calendar/src/index.js":"1","/Users/mvmarco/code/mvmarco/react-calendar/src/reportWebVitals.js":"2","/Users/mvmarco/code/mvmarco/react-calendar/src/styles/GlobalStyle.js":"3","/Users/mvmarco/code/mvmarco/react-calendar/src/App.js":"4","/Users/mvmarco/code/mvmarco/react-calendar/src/Styles/GlobalStyle.js":"5","/Users/mvmarco/code/mvmarco/react-calendar/src/Components/Calendar/CalendarIndex.js":"6","/Users/mvmarco/code/mvmarco/react-calendar/src/Context/Context.js":"7","/Users/mvmarco/code/mvmarco/react-calendar/src/Components/Calendar/CalendarComponent.js":"8","/Users/mvmarco/code/mvmarco/react-calendar/src/Utils/constantsCalendar.js":"9","/Users/mvmarco/code/mvmarco/react-calendar/src/Components/Calendar/DaysOfTheWeekComponent.js":"10","/Users/mvmarco/code/mvmarco/react-calendar/src/Components/Calendar/DateComponent.js":"11","/Users/mvmarco/code/mvmarco/react-calendar/src/Utils/dateUtils.js":"12","/Users/mvmarco/code/mvmarco/react-calendar/src/Components/Calendar/MonthComponent.js":"13"},{"size":478,"mtime":1631952863383,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1631952863383,"results":"16","hashOfConfig":"15"},{"size":354,"mtime":1629274957456,"results":"17","hashOfConfig":"15"},{"size":1053,"mtime":1631952863370,"results":"18","hashOfConfig":"15"},{"size":323,"mtime":1631952863379,"results":"19","hashOfConfig":"15"},{"size":1916,"mtime":1631952863375,"results":"20","hashOfConfig":"15"},{"size":493,"mtime":1631952863378,"results":"21","hashOfConfig":"15"},{"size":4288,"mtime":1631952863374,"results":"22","hashOfConfig":"15"},{"size":578,"mtime":1631952863380,"results":"23","hashOfConfig":"15"},{"size":435,"mtime":1631952863376,"results":"24","hashOfConfig":"15"},{"size":2877,"mtime":1631952863375,"results":"25","hashOfConfig":"15"},{"size":4873,"mtime":1631952863381,"results":"26","hashOfConfig":"15"},{"size":1125,"mtime":1631952863377,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"40yy1c",{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},"/Users/mvmarco/code/mvmarco/react-calendar/src/index.js",[],"/Users/mvmarco/code/mvmarco/react-calendar/src/reportWebVitals.js",[],"/Users/mvmarco/code/mvmarco/react-calendar/src/styles/GlobalStyle.js",[],"/Users/mvmarco/code/mvmarco/react-calendar/src/App.js",["58","59"],"// components\nimport CalendarIndex from \"./Components/Calendar/CalendarIndex\";\n// global style\nimport GlobalStyle from \"./Styles/GlobalStyle\";\n// styled components\nimport styled from \"styled-components\";\nimport { BsBoxArrowInLeft } from \"react-icons/bs\";\nimport { AnimatePresence } from \"framer-motion\";\nimport { ContextProvider } from \"./Context/Context\";\n\nfunction App() {\n  \n  return (\n    <ContextProvider>\n      <div className=\"App\">\n        <AnimatePresence exitBeforeEnter>\n          <GlobalStyle />\n          <GlobalWrapper>\n            \n            <BoxTwo>\n              <CalendarIndex />\n            </BoxTwo>\n          </GlobalWrapper>\n        </AnimatePresence>\n      </div>\n    </ContextProvider>\n  );\n}\n\n// STYLES\nconst GlobalWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100vh;\n  background-color: rgba(234, 234, 239, 255);\n  padding: 10px; // issue\n`;\n\nconst BoxOne = styled.div`\n  width: 75%;\n  height: 97.5vh;\n\n`;\n\nconst BoxTwo = styled.div`\nmargin-left: 10px;\n  width: 25%;\n  height: 97.5vh;\n`;\nexport default App;\n","/Users/mvmarco/code/mvmarco/react-calendar/src/Styles/GlobalStyle.js",[],"/Users/mvmarco/code/mvmarco/react-calendar/src/Components/Calendar/CalendarIndex.js",[],"/Users/mvmarco/code/mvmarco/react-calendar/src/Context/Context.js",[],"/Users/mvmarco/code/mvmarco/react-calendar/src/Components/Calendar/CalendarComponent.js",["60","61","62"],"import { DAYSINWEEK, WEEKSINYEAR } from \"../../Utils/constantsCalendar\";\nimport { generateDateGrid } from \"../../Utils/dateUtils\";\nimport DateComponent from \"./DateComponent\";\nimport MonthComponent from \"./MonthComponent\";\nimport styled from \"styled-components\";\nimport { useEffect, useState } from \"react\";\n\nconst CalendarComponent = ({\n  setActiveMonth,\n  activeMonth,\n  year,\n  setYear,\n  refToWrapper,\n}) => {\n  // STATES\n  const [monthRowFunction, setMonthRowFunction] = useState([]);\n  const [dateGrid, setDateGrid] = useState(null);\n\n/*  useEffect(() => {\n    if (activeMonth === 12) {\n      setTimeout(()=>{\n\n      },1)\n      setYear(+year + 1);\n      refToWrapper.current.scrollTop = 0\n      setActiveMonth(0);\n    }\n  }, [activeMonth]);*/\n\n  function handleActive(weekIndex, dayIndex) {\n    let newDateGrid = [\n      ...dateGrid.map((i) => [...i.map((y) => [y[0], y[1], false,y[3],year])]),\n    ];\n    newDateGrid[weekIndex][dayIndex][2] = true;\n    /*newDateGrid.forEach((week, i) =>\n      week.forEach((day, y) => {\n        if (i !== weekIndex && y !== dayIndex) {\n          day[2] = false;\n        }\n      })\n    );*/\n    setDateGrid(newDateGrid);\n  }\n \n\n  useEffect(() => {\n    if(dateGrid){\n      // console.log({ dateGrid });\n      if (activeMonth < 12 ) {\n        let newDateGrid = [\n          ...dateGrid.map((i) => [\n            ...i.map((y) => [y[0], y[3] === activeMonth, y[2], y[3], year]),\n          ]),\n        ];\n        if(activeMonth===0){\n\n          const dateGrid = generateDateGrid(0, +year - 1);\n          newDateGrid.unshift(...dateGrid)\n          // console.log(newDateGrid);\n        }\n        setDateGrid(newDateGrid);\n        //here only change active month\n  /*    } else if (activeMonth === 0) {\n        //refToWrapper.current.style.pointerEvents = 'none'\n        setYear(+year - 1);\n        const dateGrid = generateDateGrid(11, +year - 1);\n        setDateGrid(dateGrid);\n        refToWrapper.current.scrollTop = 10000;\n        setActiveMonth(11);*/\n      } else {\n        //refToWrapper.current.style.pointerEvents = 'none'\n        setYear(+year + 1);\n        const dateGrid = generateDateGrid(0, +year + 1);\n        setDateGrid(dateGrid);\n        refToWrapper.current.scrollTop = 0;\n        setActiveMonth(0);\n      }\n    }else{\n      const dateGrid = generateDateGrid(activeMonth, year);\n      setDateGrid(dateGrid);\n      //generate grid only once on component didmount\n    }\n    \n  }, [activeMonth]);\n\n  useEffect(() => {\n    if (dateGrid) {\n      const firstDayInMonth = [];\n      const weekRowValue = [];\n\n      for (let weekIndex = 0; weekIndex < WEEKSINYEAR; weekIndex++) {\n        let weekRow = [];\n        // from 0 to 7\n        for (let dayIndex = 0; dayIndex < DAYSINWEEK; dayIndex++) {\n          if (dateGrid[weekIndex][dayIndex][0] === 1) {\n            firstDayInMonth.push(weekIndex);\n          }\n\n          weekRow.push(\n            <DateComponent\n              key={dayIndex + '' + firstDayInMonth.length}\n              date={dateGrid[weekIndex][dayIndex]}\n              day={dayIndex}\n              month={firstDayInMonth.length}\n              dateGrid={dateGrid}\n              setActive={() => handleActive(weekIndex, dayIndex)}\n              activeMonth={activeMonth}\n            />\n          );\n        }\n        weekRowValue.push(<Week key={weekIndex}>{weekRow}</Week>);\n      }\n\n      let currentMonth = 1,\n        monthRow = [];\n\n      const newMonthRowFunction = Array(WEEKSINYEAR)\n        .fill(1)\n        .map((val, index) => {\n          if (index && index === firstDayInMonth[currentMonth]) {\n            const monthValue = (\n              <MonthComponent\n                key={index}\n                mid={currentMonth - 1}\n                setActiveMonth={setActiveMonth}\n                activeMonth={activeMonth}\n              >\n                {monthRow}\n              </MonthComponent>\n            );\n            currentMonth++;\n            monthRow = [weekRowValue[index]];\n            return monthValue;\n          } else {\n            monthRow.push(weekRowValue[index]);\n          }\n        });\n      setMonthRowFunction(newMonthRowFunction);\n    }\n  }, [dateGrid]);\n\n  return monthRowFunction;\n};\n\n// STYLES\nconst Week = styled.div`\n  display: flex;\n  scroll-snap-align: start;\n`;\n\nexport default CalendarComponent;\n","/Users/mvmarco/code/mvmarco/react-calendar/src/Utils/constantsCalendar.js",[],"/Users/mvmarco/code/mvmarco/react-calendar/src/Components/Calendar/DaysOfTheWeekComponent.js",[],"/Users/mvmarco/code/mvmarco/react-calendar/src/Components/Calendar/DateComponent.js",["63","64","65"],"import styled from 'styled-components';\nimport { DATE, MONTH } from '../../Utils/constantsCalendar';\nimport { useEffect, useState } from 'react';\n\nconst DateComponent = ({\n  day,\n  month,\n  date,\n  activeMonth,\n  setActive,\n  dateGrid,\n}) => {\n  //STATES\n  const [className, setClassName] = useState('');\n  const [firstLoad, setFirstLoad] = useState(true);\n  let [value, active, activeDay, curmonth, year] = date;\n\n  // FUNCTIONS\n  function checkActive() {\n    \n    if (value === DATE.getDate() ) {\n      if (month - 1 === DATE.getMonth()) {\n        if (activeDay || firstLoad) {\n          // console.log(activeDay,'active',value);\n          setClassName('active');\n        } else if (year === DATE.getFullYear()) {\n          \n          setClassName('current');\n        }\n      }\n    } else if (activeDay) {\n      setClassName('active');\n    } else {\n      setClassName('');\n    }\n\n  }\n  useEffect(() => {\n    checkActive();\n    setFirstLoad(false);\n  }, [value, activeDay, month, active, dateGrid]);\n\n  useEffect(() => {\n    checkActive();\n  }, []);\n\n  return (\n    <Date\n      className={`${day === 6 ? 'sunday' : ''} ${active ? 'active-month' : ''}`}\n    >\n      <DateBox>\n        <Text onClick={setActive} className={className}>\n          {value}\n        </Text>\n        {value === 1 ? (\n          <Month className={activeMonth === month - 1 ? 'active-month' : ''}>\n            {MONTH[month - 1] && MONTH[month - 1].substr(0, 0)}\n          </Month>\n        ) : null}\n      </DateBox>\n    </Date>\n  );\n};\n// STYLES 820: active and sunday need to work, error in console\nconst Date = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  height: 50px;\n  // borders around days of the month\n  /* border-right: 1px solid #e6e5e6;\n  border-bottom: 1px solid #e6e5e6; */\n  /* padding: 0px 5px 0px 5px; */\n  box-sizing: border-box;\n  background-color: #146165;\n  &:last-child {\n    border-right: 0;\n  }\n  &.sunday {\n    /* background-color: #217373;  */\n  }\n  &.active-month {\n    transition: color 0.3s ease-in;\n    color: rgba(136, 174, 180, 255);\n  }\n`;\n\nconst DateBox = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  height: 28px;\n  width: 28px;\n  justify-content: center;\n  display: flex;\n  align-items: center;\n  padding: 20px;\n\n  &.active {\n    background-color: rgba(2, 179, 150, 255);\n    text-align: center;\n    border-radius: 10px;\n    color: rgba(163, 228, 218, 255);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-weight: bold;\n  }\n  &.current {\n    text-align: center;\n    border-radius: 10px;\n    color: red;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-weight: bold;\n  }\n`;\n\nconst Month = styled.div`\n  height: 28px;\n  display: flex;\n  align-items: center;\n`;\n/* .month-active {\n    padding: 0 4px;\n  }; */\n\nexport default DateComponent;\n","/Users/mvmarco/code/mvmarco/react-calendar/src/Utils/dateUtils.js",[],"/Users/mvmarco/code/mvmarco/react-calendar/src/Components/Calendar/MonthComponent.js",["66","67"],"import { useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { DATE, MONTH } from \"../../Utils/constantsCalendar\";\n\nconst MonthComponent = (props) => {\n  const monthRef = useRef();\n  // 214\n  useEffect(() => {\n    let obs = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry,index) => {\n          //console.log(props)\n          if (entry.intersectionRatio >= 0.7) {\n            props.setActiveMonth(props.mid);\n          }\n        });\n      },\n      {\n        root: document.querySelector(\".calendarContainer\"),\n        rootMargin: \"0px\",\n        threshold: 0.8,\n      }\n    );\n    obs.observe(monthRef.current);\n  },[]);\n\n  useEffect(() => {\n    const monthRefValue = monthRef && monthRef.current;\n    if(monthRefValue) {\n      if(props.mid === DATE.getMonth()) {\n        monthRefValue.scrollIntoView();\n      }\n    }\n  }, [])\n  return (\n    <Months id={MONTH[props.mid]} ref={monthRef}>\n      {props.children}\n    </Months>\n  );\n};\n// STYLES month name \nconst Months = styled.div`\n  scroll-snap-align: start;\n  /* color: #2a8282; */\n`;\nexport default MonthComponent;\n",{"ruleId":"68","severity":1,"message":"69","line":7,"column":10,"nodeType":"70","messageId":"71","endLine":7,"endColumn":26},{"ruleId":"68","severity":1,"message":"72","line":39,"column":7,"nodeType":"70","messageId":"71","endLine":39,"endColumn":13},{"ruleId":"73","severity":1,"message":"74","line":84,"column":6,"nodeType":"75","endLine":84,"endColumn":19,"suggestions":"76"},{"ruleId":"77","severity":1,"message":"78","line":119,"column":27,"nodeType":"79","messageId":"80","endLine":119,"endColumn":29},{"ruleId":"73","severity":1,"message":"81","line":140,"column":6,"nodeType":"75","endLine":140,"endColumn":16,"suggestions":"82"},{"ruleId":"68","severity":1,"message":"83","line":16,"column":34,"nodeType":"70","messageId":"71","endLine":16,"endColumn":42},{"ruleId":"73","severity":1,"message":"84","line":41,"column":6,"nodeType":"75","endLine":41,"endColumn":49,"suggestions":"85"},{"ruleId":"73","severity":1,"message":"84","line":45,"column":6,"nodeType":"75","endLine":45,"endColumn":8,"suggestions":"86"},{"ruleId":"73","severity":1,"message":"87","line":25,"column":5,"nodeType":"75","endLine":25,"endColumn":7,"suggestions":"88"},{"ruleId":"73","severity":1,"message":"89","line":34,"column":6,"nodeType":"75","endLine":34,"endColumn":8,"suggestions":"90"},"no-unused-vars","'BsBoxArrowInLeft' is defined but never used.","Identifier","unusedVar","'BoxOne' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dateGrid', 'refToWrapper', 'setActiveMonth', 'setYear', and 'year'. Either include them or remove the dependency array. If 'setYear' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["91"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has missing dependencies: 'activeMonth', 'handleActive', and 'setActiveMonth'. Either include them or remove the dependency array.",["92"],"'curmonth' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'checkActive'. Either include it or remove the dependency array.",["93"],["94"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["95"],"React Hook useEffect has a missing dependency: 'props.mid'. Either include it or remove the dependency array.",["96"],{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},"Update the dependencies array to be: [activeMonth, dateGrid, refToWrapper, setActiveMonth, setYear, year]",{"range":"109","text":"110"},"Update the dependencies array to be: [activeMonth, dateGrid, handleActive, setActiveMonth]",{"range":"111","text":"112"},"Update the dependencies array to be: [value, activeDay, month, active, dateGrid, checkActive]",{"range":"113","text":"114"},"Update the dependencies array to be: [checkActive]",{"range":"115","text":"116"},"Update the dependencies array to be: [props]",{"range":"117","text":"118"},"Update the dependencies array to be: [props.mid]",{"range":"119","text":"120"},[2428,2441],"[activeMonth, dateGrid, refToWrapper, setActiveMonth, setYear, year]",[4125,4135],"[activeMonth, dateGrid, handleActive, setActiveMonth]",[955,998],"[value, activeDay, month, active, dateGrid, checkActive]",[1046,1048],"[checkActive]",[673,675],"[props]",[880,882],"[props.mid]"]